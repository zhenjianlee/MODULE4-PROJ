version: 2.1

orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
          # !!! Use environment variables for sensitive data export API_KEY=$MY_SECRET_API_KEY
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm test
          # !!! Integrate dependency scanning here like npm audit
  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: zhenjianlee/education-space
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: zhenjianlee/education-space
          tag: v1.0.1
      - docker/push:
          image: zhenjianlee/education-space
          tag: v1.0.1
          # !!! Integrate container image security scanning here

  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - checkout
      - heroku/install
      - run:
          name: Heroku Container Push
          command:  |
            heroku container:login
            heroku container:push web -a zhenjianlee-su-devops
            heroku container:release web -a zhenjianlee-su-devops


workflows:
  version: 2
  simple_workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - scan:
          requires:
            - test
      - publish:
          requires:
            - scan
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only:
                - main
          # !!! Define access controls here     