package com.ntu.edu.group5.ecommerce;

import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;

import com.ntu.edu.group5.ecommerce.entity.Customer;
import com.ntu.edu.group5.ecommerce.repository.CustomerRepository;

@Primary
@Service
public class CustomerServiceWithLoggingImpl implements CustomerService {
    private final Logger logger = LoggerFactory.getLogger(CustomerServiceWithLoggingImpl.class);
    private CustomerRepository customerRepository;

    // @Autowired
    public CustomerServiceWithLoggingImpl(CustomerRepository customerRepository) {
        this.customerRepository = customerRepository;
    }

    @Override
    public Customer createCustomer(Customer customer) {
        return customerRepository.createCustomer(customer);
    }

    @Override
    public Customer getCustomer(String id) {
        return customerRepository.getCustomer(getCustomerIndex(id));
    }

    @Override
    public ArrayList<Customer> getAllCustomers() {
        logger.info("CustomerServiceWithLoggingImpl.getAllCustomers() called");
        return customerRepository.getAllCustomers();
    }

    @Override
    public Customer updateCustomer(String id, Customer customer) {
        return customerRepository.updateCustomer(getCustomerIndex(id), customer);
    }

    @Override
    public void deleteCustomer(String id) {
        customerRepository.deleteCustomer(getCustomerIndex(id));
    }

    // helper method
    private int getCustomerIndex(String id) {
        for (Customer customer: customerRepository.getAllCustomers()) {
            if(customer.getId().equals(id)) {
                return customerRepository.getAllCustomers().indexOf(customer);
            }
        }

        // Not found
        throw new CustomerNotFoundException(id);
    }
}
